
#FOR H2 DATABASE
#
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=
#
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
#spring.jpa.show-sql=true
## to see sql interaction on the console
#
#spring.h2.console.enabled=true
## to see h2 endpoint on the console
#
#spring.h2.console.path=/cydeo
## to change endpoint

#FOR POSTGRES DB
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=0571

spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
#to execute .sql files right away when the application starts

spring.jpa.hibernate.ddl-auto=create
#DDL auto properties : Just like the drop table if exists statement in the schema.sql but this is for @Entity annotation since it is also creating a table and adding data

spring.jpa.defer-datasource-initialization=true